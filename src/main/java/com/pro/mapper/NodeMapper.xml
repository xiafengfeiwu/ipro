<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pro.dao.NodeMapper">
  <resultMap id="BaseResultMap" type="com.pro.entity.Node">
    <id column="node_id" jdbcType="BIGINT" property="nodeId" />
    <result column="terminal_id" jdbcType="BIGINT" property="terminalId" />
    <result column="device_id" jdbcType="BIGINT" property="deviceId" />
    <result column="last_time_contact_time" jdbcType="TIMESTAMP" property="lastTimeContactTime" />
    <result column="regist_time" jdbcType="TIMESTAMP" property="registTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    node_id, terminal_id, device_id, last_time_contact_time, regist_time
  </sql>
  <select id="selectByExample" parameterType="com.pro.entity.NodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from w_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from w_node
    where node_id = #{nodeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from w_node
    where node_id = #{nodeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.pro.entity.NodeExample">
    delete from w_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pro.entity.Node">
    insert into w_node (node_id, terminal_id, device_id, 
      last_time_contact_time, regist_time)
    values (#{nodeId,jdbcType=BIGINT}, #{terminalId,jdbcType=BIGINT}, #{deviceId,jdbcType=BIGINT}, 
      #{lastTimeContactTime,jdbcType=TIMESTAMP}, #{registTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.pro.entity.Node">
    insert into w_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="terminalId != null">
        terminal_id,
      </if>
      <if test="deviceId != null">
        device_id,
      </if>
      <if test="lastTimeContactTime != null">
        last_time_contact_time,
      </if>
      <if test="registTime != null">
        regist_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nodeId != null">
        #{nodeId,jdbcType=BIGINT},
      </if>
      <if test="terminalId != null">
        #{terminalId,jdbcType=BIGINT},
      </if>
      <if test="deviceId != null">
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="lastTimeContactTime != null">
        #{lastTimeContactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registTime != null">
        #{registTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pro.entity.NodeExample" resultType="java.lang.Long">
    select count(*) from w_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update w_node
    <set>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=BIGINT},
      </if>
      <if test="record.terminalId != null">
        terminal_id = #{record.terminalId,jdbcType=BIGINT},
      </if>
      <if test="record.deviceId != null">
        device_id = #{record.deviceId,jdbcType=BIGINT},
      </if>
      <if test="record.lastTimeContactTime != null">
        last_time_contact_time = #{record.lastTimeContactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registTime != null">
        regist_time = #{record.registTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update w_node
    set node_id = #{record.nodeId,jdbcType=BIGINT},
      terminal_id = #{record.terminalId,jdbcType=BIGINT},
      device_id = #{record.deviceId,jdbcType=BIGINT},
      last_time_contact_time = #{record.lastTimeContactTime,jdbcType=TIMESTAMP},
      regist_time = #{record.registTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pro.entity.Node">
    update w_node
    <set>
      <if test="terminalId != null">
        terminal_id = #{terminalId,jdbcType=BIGINT},
      </if>
      <if test="deviceId != null">
        device_id = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="lastTimeContactTime != null">
        last_time_contact_time = #{lastTimeContactTime,jdbcType=TIMESTAMP},
      </if>
      <if test="registTime != null">
        regist_time = #{registTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where node_id = #{nodeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pro.entity.Node">
    update w_node
    set terminal_id = #{terminalId,jdbcType=BIGINT},
      device_id = #{deviceId,jdbcType=BIGINT},
      last_time_contact_time = #{lastTimeContactTime,jdbcType=TIMESTAMP},
      regist_time = #{registTime,jdbcType=TIMESTAMP}
    where node_id = #{nodeId,jdbcType=BIGINT}
  </update>
</mapper>